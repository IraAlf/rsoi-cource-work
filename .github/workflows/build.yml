name: Build Project
on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Create flags
        id: flags
        run: |
          RELEASE="false"
          echo "::set-output name=RELEASE::$RELEASE"

      # - name: Build gateway
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/gateway && go get -d ./... && go build ./...
      # - name: Build flights
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/flights && go get -d ./... && go build ./...
      # - name: Build tickets
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/tickets && go get -d ./... && go build ./...
      # - name: Build privileges
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/privileges && go get -d ./... && go build ./...
      # - name: Build identity provider
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/identity-provider && go get -d ./... && go build ./...

      # - name: Docker hub auth
      #   run: docker login -u "iraalf" -p "gfERytg+X6R;zC9" docker.io
      #   # with:
      #   #   username: ${{ secrets.DOCKERHUB_LOGIN }}
      #   #   password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Publish gateway image
      #   run: |
      #     cd ./src/gateway
      #     docker build --no-cache -t iraalf/gateway-service .
      #     docker tag iraalf/gateway-service iraalf/gateway-service:latest
      #     docker push iraalf/gateway-service:latest
      # - name: Publish flights image
      #   run: |
      #     cd ./src/flights
      #     docker build --no-cache -t iraalf/flights-service .
      #     docker push iraalf/flights-service:latest
      # - name: Publish tickets image
      #   run: |
      #     cd ./src/tickets
      #     docker build --no-cache -t iraalf/tickets-service .
      #     docker push iraalf/tickets-service:latest
      # - name: Publish privileges image
      #   run: |
      #     cd ./src/privileges
      #     docker build --no-cache -t iraalf/privileges-service .
      #     docker push iraalf/privileges-service:latest
      # - name: Publish identity-provider image
      #   run: |
      #     cd ./src/identity-provider
      #     docker build --no-cache -t iraalf/identity-provider-service .
      #     docker push iraalf/identity-provider-service:latest

      - name: Setup Kuber config  
      env:
        OS_AUTH_URL: "https://infra.mail.ru:35357/v3/"
        OS_USERNAME: "irinaalferova13@mail.ru"
        OS_PASSWORD: "@PST7tH9b#~aAaB"
        OS_PROJECT_ID: "942cb64429484e35bf04b8eeb9ada51b"
        OS_DOMAIN_NAME: "users"
      run: |
        kubectl config set-cluster kubernetes-cluster-7789 --server="https://185.241.194.199:6443" --insecure-skip-tls-verify=true
        kubectl config set-credentials kubernetes-cluster-7789 --exec-command=client-keystone-auth --exec-api-version=client.authentication.k8s.io/v1beta1 --exec-arg=--os-auth-url=$OS_AUTH_URL --exec-arg=--os-username=$OS_USERNAME --exec-arg=--os-password=$OS_PASSWORD --exec-arg=--os-project-id=$OS_PROJECT_ID --exec-arg=--os-domain-name=$OS_DOMAIN_NAME
        kubectl config set-context default --cluster=kubernetes-cluster-7789 --user=kubernetes-cluster-7789
        kubectl config use-context default


      - name: Prepare Kube config
        run: |
          cd k8s && helm upgrade --install services ./services-chart
          sleep 20

        # export KUBECONFIG=./kubernetes-cluster-7789_kubeconfig.yaml

      # - name: Run API Tests
      #   uses: matt-ball/newman-action@master
      #   with:
      #     collection: v1/postman/collection.json
      #     environment: v1/postman/environment.json
      #     delayRequest: 100
      #     reporters: '[ "cli" ]'

      # - uses: education/autograding@v1
      #   id: autograder
      #   continue-on-error: true

#      - name: GitHub auto grader mark
#        uses: Romanow/google-sheet-autograder-marker@v1.0
#        with:
#          google_token: ${{secrets.GOOGLE_API_KEY}}
#          sheet_id: ""
#          homework_number: 1
#          user_column: 'D'
#          column_offset: 'F'
#          mark: "'+"

#      - name: Stop containers
#        if: always()
#        continue-on-error: true
#        run: docker compose down -v