name: Build Project
on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Create flags
        id: flags
        run: |
          RELEASE="false"
          echo "::set-output name=RELEASE::$RELEASE"

      # - name: Build gateway
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/gateway && go get -d ./... && go build ./...
      # - name: Build flights
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/flights && go get -d ./... && go build ./...
      # - name: Build tickets
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/tickets && go get -d ./... && go build ./...
      # - name: Build privileges
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/privileges && go get -d ./... && go build ./...
      # - name: Build identity provider
      #   if: ${{ steps.flags.outputs.RELEASE == 'true' }}
      #   run: cd src/identity-provider && go get -d ./... && go build ./...

      # - name: Docker hub auth
      #   run: docker login -u "iraalf" -p "gfERytg+X6R;zC9" docker.io
      #   # with:
      #   #   username: ${{ secrets.DOCKERHUB_LOGIN }}
      #   #   password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Publish gateway image
      #   run: |
      #     cd ./src/gateway
      #     docker build --no-cache -t iraalf/gateway-service .
      #     docker tag iraalf/gateway-service iraalf/gateway-service:latest
      #     docker push iraalf/gateway-service:latest
      # - name: Publish flights image
      #   run: |
      #     cd ./src/flights
      #     docker build --no-cache -t iraalf/flights-service .
      #     docker push iraalf/flights-service:latest
      # - name: Publish tickets image
      #   run: |
      #     cd ./src/tickets
      #     docker build --no-cache -t iraalf/tickets-service .
      #     docker push iraalf/tickets-service:latest
      # - name: Publish privileges image
      #   run: |
      #     cd ./src/privileges
      #     docker build --no-cache -t iraalf/privileges-service .
      #     docker push iraalf/privileges-service:latest
      # - name: Publish identity-provider image
      #   run: |
      #     cd ./src/identity-provider
      #     docker build --no-cache -t iraalf/identity-provider-service .
      #     docker push iraalf/identity-provider-service:latest

      - name: Setup Kuber config
        run: |
          kubectl config set-cluster kubernetes-cluster-7789 --server="https://185.241.194.199:6443" --insecure-skip-tls-verify=true
          kubectl config set-credentials github-actions --token=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5VENDQWQyZ0F3SUJBZ0lSQUtZTEQ2WGhqa2wxZ2FDNXMxeFhTM1V3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXd3WGEzVmlaWEp1WlhSbGN5MWpiSFZ6ZEdWeUxUYzNPRGt3SGhjTk1qUXdOekkzTVRZdwpNVEkzV2hjTk1qa3dOekkzTVRZd01USTNXakFpTVNBd0hnWURWUVFEREJkcmRXSmxjbTVsZEdWekxXTnNkWE4wClpYSXROemM0T1RDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWJBNXFTT1VQUWUKRmNNME5VMDF4MDI1aE5NbnBqWWZhZmhDdndzU054WGY0aVE5VDJZT0lpdHgyOEh6STUxMHpZTjNoRE9wcnB0MApTODV3QUdKT21sSmd6QnVBU3A5QW5lOURIRmI4NzZaeHBDY1FXbC9HNzhkbElnQ2htcmtjVEZxSDRsTXpWd3JICkhueE5qUnJlbjlJMjFNVVgzS3JJWEIyeVYrclBHeXRRd25vckVVWnZ6UmU5c1dxVG5Wc3FZMW5OektKYjRPV1gKemxzTkxSM2N2MTVZeWNNM250cmYxaFlBZGgwSnlaQmpYMXNENEJwalpZMWR1dTJ5VFZzNzV5NTFCa29zc1FNbApVTmhRa1BucVFzRGJPZXlnajlXNHhjSmovNUFzakxyeTUyVTBOZFZ3TWNlNHUxVjk4Tnd0eWdlSGdCM1FTOWw4CkNkQ3NIWm4xMDNzQ0F3RUFBYU1tTUNRd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQU9CZ05WSFE4QkFmOEUKQkFNQ0FnUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR1NRME1zVnRwd2gzdm5keHBpa0g5VUZ3aXVmZDdqaQpTNk8vS1BQZWZzWnNReDVJUkhoaWQ4dWhVL0hCYkpkbng5d2lVTlVKdTBPN1BFbFQ1OStiQzNOY1pEZ2lQcmlkClA3dnJES2NFT1RJazl3aFc4VTBPTktUNExQZW9ZU3IwVG85VlpqRkNiMVBjRlB1cHlkclhEakdEbmp6K21PZkQKQkVqTzFQTHVkZkhTR29qa0RVVURYV09XNHJzVHVnQnYyV21TQXBycXhrOGh4WndEUXNMMlZ5QUs2Q2xsRHdNSgo1WFNHcndBYXRTOFJBVmk0bXBheFl5a2ZsVUJheHlCRFpNbEpudm1CWXhPcXl4RVp6bUN2Tmd0SnR3bzFoKzZ2CmVoUjdFeWNTS1VQb043UldtQjZjTUc4S3N0SXd2akFzbXEzMUFzWW9tQWJDQWxkSGlESzh4VGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
          kubectl config set-context default --cluster=kubernetes-cluster-7789 --user=kubernetes-cluster-7789
          kubectl config use-context default
      - name: Prepare Kube config
        run: |
          cd k8s && helm upgrade --install services ./services-chart
          sleep 20

        # export KUBECONFIG=./kubernetes-cluster-7789_kubeconfig.yaml

      # - name: Run API Tests
      #   uses: matt-ball/newman-action@master
      #   with:
      #     collection: v1/postman/collection.json
      #     environment: v1/postman/environment.json
      #     delayRequest: 100
      #     reporters: '[ "cli" ]'

      # - uses: education/autograding@v1
      #   id: autograder
      #   continue-on-error: true

#      - name: GitHub auto grader mark
#        uses: Romanow/google-sheet-autograder-marker@v1.0
#        with:
#          google_token: ${{secrets.GOOGLE_API_KEY}}
#          sheet_id: ""
#          homework_number: 1
#          user_column: 'D'
#          column_offset: 'F'
#          mark: "'+"

#      - name: Stop containers
#        if: always()
#        continue-on-error: true
#        run: docker compose down -v